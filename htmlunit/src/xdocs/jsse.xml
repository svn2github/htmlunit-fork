<?xml version="1.0"?>
<document>

    <properties>
        <title>Configuring JSSE</title>
        <author>Tom Hamilton</author>
        <author email="mbowler@GargoyleSoftware.com">Mike Bowler</author>
        <revision>$Revision$</revision>
    </properties>

    <body>
        <section name="Configuring JSSE">
            <p>
                The following instructions were initially provided by Tom Hamilton in response
                to a question on the htmlunit-develop mailing list.
            </p>
            <ol>
                <li>
                    Make sure that you have <a href="http://java.sun.com/products/jsse">jsse</a>!
                </li>
                <li>
                    Make sure that you pass in the following param to the jvm
                    <source><![CDATA[<jvmarg value="-Djava.protocol.handler.pkgs=com.sun.net.ssl.internal.www.protocol"/>]]></source>
                </li>
                <li>
                    Change your java.security file to include the following (it's the
                    security.provider.3 line!)
                <source>
#
# List of providers and their preference orders (see above):
#
security.provider.1=sun.security.provider.Sun
security.provider.2=com.sun.rsajca.Provider
security.provider.3=com.sun.net.ssl.internal.ssl.Provider
                </source>
                </li>
                <li>
                    Make sure your class path includes the right jars - in the right order!
                    Here is a cut from my ant script that I use to run all of my tests, seeing
                    as I had it written down...
                    Some things to note about this class path, I'm using cactus, WebLogic,
                    struts, log4j and Xalan.  You may not need all of these, but the key part is
                    the html unit bits and their integration with jsse.  Note that all of these
                    come first.
                <source><![CDATA[
<path id="test.classpath">
     <!-- note - the order of the classpath is important for the html unit stuff to work -->
     <!-- the html unit classes -->
     <pathelement path="C:\HtmlUnit-1.2.2\lib\commons-httpclient.jar"/>
     <pathelement path="C:\HtmlUnit-1.2.2\lib\commons-logging.jar"/>
     <pathelement path="C:\HtmlUnit-1.2.2\lib\HtmlUnit.jar"/>

     <!-- jsse libs -->
     <pathelement path="C:\jsse1.0.3_02\lib\jcert.jar"/>
     <pathelement path="C:\jsse1.0.3_02\lib\jnet.jar"/>
     <pathelement path="C:\HtmlUnit-1.2.2\lib\js.jar"/>
     <pathelement path="C:\jsse1.0.3_02\lib\jsse.jar"/>

     <!-- some more html unit libs -->
     <pathelement path="C:\HtmlUnit-1.2.2\lib\nekohtml.jar"/>
     <pathelement path="C:\HtmlUnit-1.2.2\lib\xercesImpl.jar"/>
     <pathelement path="C:\HtmlUnit-1.2.2\lib\xmlParserAPIs.jar"/>

     <!--  jdbc classes for oracle    -->
     <pathelement path="C:\oracle\ora81\jdbc\lib\classes12.zip"/>
     <pathelement path="C:\oracle\ora81\jdbc\lib\nls_charset12.zip"/>
     <pathelement path="C:\oracle\ora81\orb\classes\yoj.jar"/>

     <!-- the test classes are all in here -->
     <pathelement location="c:\projects\nbkrel3/webifServices/.antbuild/classes/war/"/>

     <!-- the cactus libs -->
     <pathelement path="C:\jakarta-cactus-13-1.4\lib\cactus-1.4.jar"/>
     <pathelement path="C:\jakarta-cactus-13-1.4\lib\aspectjrt-1.0.5.jar"/>
     <pathelement path="C:\jakarta-cactus-13-1.4\lib\commons-logging-1.0.jar"/>
     <pathelement path="C:\jakarta-cactus-13-1.4\lib\junit-3.7.jar"/>
     <pathelement path="C:\jakarta-cactus-13-1.4\lib\httpunit-1.4.1.jar"/>
     <pathelement path="C:\jakarta-cactus-13-1.4\lib\commons-httpclient-2.0alpha1-20020606.jar"/>

     <!-- log4j -->
     <pathelement path="${project.root.dir}/dependencies/lib/log4j.jar"/>

     <!-- struts -->
     <pathelement path="${project.root.dir}/dependencies/lib/jakarta-oro-2.0.6.jar"/>
     <pathelement path="${project.root.dir}/dependencies/lib/struts.jar"/>

     <!-- junit classes -->
     <pathelement path="${project.root.dir}/dependencies/lib/junit.jar"/>
     <pathelement path="${project.root.dir}/dependencies/lib/junitx.jar"/>

     <!-- math routines -->
     <pathelement path="${project.root.dir}/dependencies/lib/IBMMath.jar"/>

     <!-- jce -->
     <pathelement path="${project.root.dir}/dependencies/lib/jce1_2-do.jar"/>

     <!-- weblogic classes -->
     <pathelement path="${weblogic.dir}/lib/weblogic_sp.jar"/>
     <pathelement path="${weblogic.dir}/lib/weblogic.jar"/>

     <!-- xml classes -->
     <pathelement path="${xalan.dir}/bin/xml-apis.jar"/>
     <pathelement path="${xalan.dir}/bin/xercesImpl.jar"/>
     <pathelement path="${xalan.dir}/bin/xalan.jar"/>

     <!-- jakarta commons lib -->
     <pathelement path="${weblogic.dir}/lib/commons-collections.jar"/>
                ]]></source>
                The xalan stuff is in here so that the xslt transalation works when I do the
                junitreports
                </li>
                <li>
                    Finally you will need to import the certificate into your jssecacerts
                    file - this is simple enough, just lookup how to do it on javasoft.com
                </li>
                <li>
                    Finally finally pass in the param

                    <source><![CDATA[<jvmarg value="-Djavax.net.debug=all"/>]]></source>
                    to check what is going wrong - 'cos it's bound to!
                    Once it's working turn the flag to

                    <source><![CDATA[<jvmarg value="-Djavax.net.debugx=all"/>]]></source>
                    Then it all works, no debug comes out, and you don't forget what the flag is
                    for next time!
                </li>
            </ol>
        </section>
    </body>
</document>
