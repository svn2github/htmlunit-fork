<?xml version="1.0"?>
<!--
    This is a configuration file for the ant build tool
    http://ant.apache.org
    $Revision$


    Authors:
        Mike Bowler
        David K. Taylor
        Brad Clarke
        Tony Graham
        Marc Guillemot
        Ahmed Ashour
-->

<project name="HtmlUnit" default="jar" basedir=".">

<!--<property name="build.compiler" value="jikes" />-->
<property name="build.compiler.pedantic" value="true"/>

<property environment="env"/>
<property name="base.src.dir" value ="src/main/java"/>
<property name="base.src.resources" value ="src/main/resources"/>
<property name="test.src.dir" value ="src/test/java"/>
<property name="jars.dir" value ="ant-jars"/>
<property name="target.dir" value ="ant-target"/>
<property name="base.classes.dir" value ="${target.dir}/classes"/>
<property name="test.classes.dir" value ="${target.dir}/test-classes"/>
<property name="test.results.dir" location="${target.dir}/junit-results"/>
<property name="test.reports.dir" location="${target.dir}/junit-reports"/>

<property name="remote.repository" value="http://www.ibiblio.org/maven/"/>
<!-- Some mirrors you can substitute are listed here:
    http://maven.apache.org/maven-1.x/faq.html#ibiblio-mirrors
-->

<path id="base.class.path">
    <pathelement path="${base.classes.dir}"/>

    <fileset dir="${jars.dir}">
        <include name="**/*.jar"/>
    </fileset>

    <!-- Required so that jikes can find the JDK classes on Mac OS/X -->
    <pathelement path="/System/Library/Frameworks/JavaVM.framework/Versions/1.3.1/Classes/classes.jar"/>
    <pathelement path="/System/Library/Frameworks/JavaVM.framework/Versions/1.4.1/Classes/classes.jar"/>
</path>

<path id="test.class.path">
    <path refid="base.class.path"/>
    <pathelement path="${test.classes.dir}"/>
</path>

<target name="maketarget" description="make target directories">
    <mkdir dir="${base.classes.dir}"/>
    <mkdir dir="${test.classes.dir}"/>
</target>

<target name="compile" description="compile" depends="maketarget">
    <javac srcdir="${base.src.dir}" destdir="${base.classes.dir}"
            debug="on" deprecation="off"
            source="1.5" target="1.5" encoding="ISO-8859-1">
        <classpath refid="base.class.path"/>
    </javac>
    <copy todir="${base.classes.dir}">
        <fileset dir="${base.src.dir}">
            <exclude name="**/*.java"/>
        </fileset>
    </copy>
    <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}"
            debug="on" deprecation="off"
            source="1.5" target="1.5" encoding="ISO-8859-1">
        <classpath refid="test.class.path"/>
    </javac>
    <copy todir="${test.classes.dir}">
        <fileset dir="${test.src.dir}">
            <exclude name="**/*.java"/>
        </fileset>
    </copy>
    <copy todir="${test.classes.dir}">
        <fileset dir="${test.src.dir}/../resources"/>
    </copy>
    <copy todir="${base.classes.dir}">
        <fileset dir="${base.src.resources}"/>
    </copy>
</target>
<target name="cruise-set-jar-suffix">
    <tstamp>
        <format property="now" pattern="yyyyMMdd.hhmm" locale="en"/>
    </tstamp>
    <property name="jar.suffix" value="-${now}"/>
</target>
<target name="jar" description="Make a jar of HtmlUnit" depends="clean,checkstyle,compile,junit">
    <property name="jar.suffix" value=""/>
    <mkdir dir="${target.dir}/distrib"/>
    <jar
        jarfile="${target.dir}/distrib/HtmlUnit${jar.suffix}.jar"
        basedir="${base.classes.dir}"
        excludes="**/test/*,**/*.java,build.xml,lib,**/package.html"
    />
    <jar
        jarfile="${target.dir}/distrib/HtmlUnit-src${jar.suffix}.jar"
        basedir="${base.src.dir}"
        includes="**/*.java"/>
</target>

<target name="clean" description="clean">
    <delete dir="${target.dir}" quiet="true"/>
</target>

<target name="validate" description="Validate JavaScript config file (currently broken)">
    <xmlvalidate
        failonerror="yes" lenient="no" warn="yes"
        file="${base.src.resources}/com/gargoylesoftware/htmlunit/javascript/configuration/JavaScriptConfiguration.xml"
        classname="org.apache.xerces.parsers.SAXParser"
        classpathref="base.class.path">

        <xmlcatalog>
            <entity
                publicId="JavaScriptConfiguration.xsd"
                location="${base.src.resources}/com/gargoylesoftware/htmlunit/javascript/JavaScriptConfiguration.xsd"/>
        </xmlcatalog>
    </xmlvalidate>
</target>

<target name="junit" depends="compile" description="junit">
    <delete dir="${test.results.dir}"/>
    <mkdir dir="${test.results.dir}"/>

    <junit fork="true" forkmode="perBatch" dir="${basedir}"
            errorProperty="test.failed" failureProperty="test.failed">
        <classpath refid="test.class.path"/>
        <formatter type="xml"/>
        <formatter type="brief" usefile="false"/>

        <batchtest todir="${test.results.dir}">
            <fileset dir="${test.classes.dir}">
                <include name="**/*Test.class"/>
                <exclude name="**/*$*.class"/>
            </fileset>
        </batchtest>
    </junit>

    <delete dir="${test.reports.dir}"/>
    <mkdir dir="${test.reports.dir}"/>
    <junitreport todir="${test.reports.dir}">
        <fileset dir="${test.results.dir}">
            <include name="TEST-*.xml"/>
        </fileset>
        <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>
    <echo>
**********************
JUnit results available here: ${test.reports.dir}/index.html
**********************
    </echo>
    <fail if="test.failed">Tests have failed!!</fail>
</target>

    <macrodef name="get-dependency">
        <attribute name="project"/>
        <attribute name="jarName"/>
        <attribute name="type" default="required"/>
        <sequential>
            <mkdir dir="${jars.dir}/@{type}/"/>
            <get usetimestamp="true"
                src="${remote.repository}@{project}/jars/@{jarName}"
                dest="${jars.dir}/@{type}/@{jarName}"/>
        </sequential>
    </macrodef>

    <!-- Get dependency in HtmlUnit snapshot repository -->
    <macrodef name="get-snapshot-dependency">
        <attribute name="project"/>
        <attribute name="jarName"/>
        <attribute name="type" default="required"/>
        <attribute name="version"/>
        <sequential>
            <mkdir dir="${jars.dir}/@{type}/"/>
            <get usetimestamp="true"
                src="http://htmlunit.sourceforge.net/m2-repo-snapshots/@{project}/@{project}-hu/@{version}/@{jarName}"
                dest="${jars.dir}/@{type}/@{jarName}"/>
        </sequential>
    </macrodef>

    <target name="initialize"
            description="Get a clean set of all needed jars"
            depends="clean-jars,get-jars"/>

    <target name="clean-jars" description="Delete existing jars">
        <delete dir="${jars.dir}"/>
    </target>

    <target name="get-jars" depends="setProxy"
        description="Get all the required dependencies from a remote repository">

        <!-- required -->
        <get-dependency project="commons-httpclient" jarName="commons-httpclient-3.1.jar"/>
        <get-dependency project="commons-codec" jarName="commons-codec-1.3.jar"/>
        <get-dependency project="xerces" jarName="xercesImpl-2.8.1.jar"/>
        <get-dependency project="xerces" jarName="xmlParserAPIs-2.6.2.jar"/>
        <get-snapshot-dependency project="nekohtml" jarName="nekohtml-hu-1.9.6.3.jar" version="1.9.6.3"/>
        <get-dependency project="net.sourceforge.cssparser" jarName="cssparser-0.9.5.jar"/>
        <get-dependency project="commons-logging" jarName="commons-logging-1.1.1.jar"/>
        <get-dependency project="xalan" jarName="xalan-2.7.0.jar"/>
        <get-dependency project="commons-io" jarName="commons-io-1.4.jar"/>
        <get-dependency project="commons-lang" jarName="commons-lang-2.3.jar"/>
        <get-dependency project="commons-collections" jarName="commons-collections-3.2.jar"/>
        <get-dependency project="rhino" jarName="js-1.7R1.jar"/>

        <!-- test -->
        <get-dependency type="test" project="junit" jarName="junit-4.4.jar"/>
        <get-dependency type="test" project="gsbase" jarName="gsbase-2.0.1.jar"/>
        <get-dependency type="test" project="org.mortbay.jetty" jarName="jetty-6.1.8.jar"/>
        <get-dependency type="test" project="org.mortbay.jetty" jarName="jetty-util-6.1.8.jar"/>
        <get-dependency type="test" project="log4j" jarName="log4j-1.2.14.jar"/>
        <get-dependency type="test" project="org.slf4j" jarName="slf4j-api-1.4.3.jar"/>
        <get-dependency type="test" project="org.slf4j" jarName="slf4j-log4j12-1.4.3.jar"/>
        <get-dependency type="test" project="javax.servlet" jarName="servlet-api-2.4.jar"/>
        <get-dependency type="test" project="commons-fileupload" jarName="commons-fileupload-1.2.1.jar"/>

    </target>

    <target name="setProxy" if="proxy.host" description="configures the proxy if needed">
        <setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}"/>
    </target>

    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="checkstyle" depends="-getCheckstyle" description="Checks the constistency of htmlunit source code">

        <taskdef resource="checkstyletask.properties" classpath="${jars.dir}/checkstyle/checkstyle-4.3/checkstyle-all-4.3.jar"/>

        <checkstyle config="checkstyle.xml" maxWarnings="0">
            <property key="checkstyle.cache.file" file="${target.dir}/checkstyle-cachefile"/>
            <classpath>
                <path refid="test.class.path"/>
                <path location="${base.classes.dir}"/>
            </classpath>
            <fileset dir="${base.src.dir}" includes="**/*.java"/>
            <fileset dir="${test.src.dir}" includes="**/*.java"/>
        </checkstyle>
    </target>

    <available file="${jars.dir}/checkstyle/checkstyle-4.3/checkstyle-all-4.3.jar" property="checkstyle.available"/>
    <target name="-getCheckstyle" unless="checkstyle.available" description="Get checkstyle">
        <!-- checkstyle-all not available by ibiblio, get cs distribution from sf and unzip it -->
        <mkdir dir="${jars.dir}/checkstyle"/>
        <get dest="${jars.dir}/checkstyle/checkstyle-4.3.zip" src="http://heanet.dl.sourceforge.net/sourceforge/checkstyle/checkstyle-4.3.zip"/>
        <unzip src="${jars.dir}/checkstyle/checkstyle-4.3.zip" dest="${jars.dir}/checkstyle"/>
    </target>

</project>
